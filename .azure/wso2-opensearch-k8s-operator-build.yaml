resources:
  repositories:
  - repository: common-templates
    type: github
    name: wso2-enterprise/choreo-common-pipeline-templates
    endpoint: wso2-enterprise

trigger:
  batch: true
  branches:
    include:
    - temp-panic-test

pr: none

variables:
- name: CONTAINER_REGISTRY
  value: choreocontrolplane.azurecr.io
- name: PRIVATE_CONTAINER_REGISTRY
  value: choreoprivateacr.azurecr.io
- name: REPOSITORY
  value: choreoipaas/wso2-opensearch-k8s-operator
- name: APP_REVISION
  value: $(Build.SourceBranchName)-$(Build.SourceVersion)

pool:
  vmImage: "ubuntu-latest"

steps:
- task: Docker@2
  displayName: "Docker Build"
  inputs:
    command: build
    Dockerfile: "opensearch-operator/Dockerfile"
    buildContext: "opensearch-operator"
    containerRegistry: "wso2choreo-control-plane-acr"
    repository: $(REPOSITORY)
    tags: |
      $(APP_REVISION)
      latest
- template: install/install-trivy.yaml@common-templates
- script: |
    set -eo pipefail
    trivy image --exit-code 1 \
    --severity HIGH,CRITICAL \
    --no-progress \
    --ignorefile .trivyignore \
    $(CONTAINER_REGISTRY)/$(REPOSITORY):$(APP_REVISION)
- script: |
    docker tag $(CONTAINER_REGISTRY)/$(REPOSITORY):$(APP_REVISION) $(PRIVATE_CONTAINER_REGISTRY)/$(REPOSITORY):$(APP_REVISION)
    docker tag $(CONTAINER_REGISTRY)/$(REPOSITORY):latest $(PRIVATE_CONTAINER_REGISTRY)/$(REPOSITORY):latest
  displayName: "Retag for choreoprivateacr"
- task: Docker@2
  displayName: "Push Docker image to Choreo ACR"
  inputs:
    command: push
    containerRegistry: 'wso2choreo-control-plane-acr'
    repository: $(REPOSITORY)
    tags: |
      latest
      $(APP_REVISION)
- task: Docker@2
  displayName: "Push Docker image to Choreo Private ACR"
  inputs:
    command: push
    containerRegistry: "choreo-private-acr"
    repository: $(REPOSITORY)
    tags: |
      $(APP_REVISION)
      latest
- task: Docker@2
  displayName: 'Login to ACR'
  inputs:
    command: login
    containerRegistry: choreo-private-acr
- task: Docker@2
  displayName: 'Login to Public ACR'
  inputs:
    command: login
    containerRegistry: choreo-public-acr
- script: |
    cd charts/opensearch-operator
    helm dependency build
    echo "Packaging chart..."
    helm package .
    packageName=$(printf "%s-%s.tgz" "$(yq '.name' Chart.yaml)" $(yq '.version' Chart.yaml))
    helm push $packageName oci://choreoprivateacr.azurecr.io/helm
    helm push $packageName oci://choreopublicacr.azurecr.io/helm
  displayName: "Package and push Helm chart to ACR"
